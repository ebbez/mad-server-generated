application {
  config {
    applicationType monolith
    baseName AutoMaat
    authenticationType jwt
    buildTool maven
    cacheProvider no
    clientFramework angularX
    clientPackageManager npm
    databaseType sql
    prodDatabaseType mysql
    devDatabaseType h2Memory
    languages [en, nl]
    packageName nl.hanze.se4.automaat
  }
  entities *
  service * with serviceClass
  paginate * with pagination
}

entity Car {
    brand String,
    model String,
    picture ImageBlob,
    fuel Fuel,
    options String,
    licensePlate String,
    engineSize Integer,
    modelYear Integer,
    since LocalDate,
    price Float,
    nrOfSeats Integer,
    body Body,
    longitude Float,
    latitude Float
}

entity Rental {
    code String,
    longitude Float,
    latitude Float,
    fromDate LocalDate,
    toDate LocalDate,
    state RentalState
}

entity Customer {
    nr Integer,
    lastName String,
    firstName String,
    from LocalDate
}

entity Employee {
    nr Integer,
    lastName String,
    firstName String,
    from LocalDate
}

entity Inspection {
    code String,
    odometer Long,
    result String,
    description String,
    photo ImageBlob,
    completed ZonedDateTime
}

entity InspectionPhoto {
    photo ImageBlob
}

entity Repair {
    description String,
    repairStatus RepairStatus,
    dateCompleted LocalDate
}

entity Location {
    streetAddress String,
    postalCode String,
    city String,
    stateProvince String
}

entity RouteFromTo {
    code String,
    description String,
    date LocalDate
}

entity RouteStop {
    nr Integer
}

enum Fuel {
    GASOLINE,
    DIESEL,
    HYBRID,
    ELECTRIC
}

enum Body {
    STATIONWAGON,
    SEDAN,
    HATCHBACK,
    MINIVAN,
    MPV,
    SUV,
    COUPE,
    TRUCK,
    CONVERTIBLE
}

enum RentalState {
    ACTIVE,
    RESERVED,
    PICKUP,
    RETURNED
}

enum RepairStatus {
    PLANNED,
    DOING,
    DONE,
    CANCELLED
}

relationship OneToMany {
    Location{customer(lastName)} to Customer{location},
    Customer{rental} to Rental{customer(lastName)},
    Car{inspection} to Inspection{car(licensePlate)}
    Car{repair} to Repair{car(licensePlate)},
    Employee{inspection} to Inspection{employee(lastName)},
    Employee{repair} to Repair{employee(lastName)},
    Employee{routeFromTo} to RouteFromTo{employee(lastName)},
    Rental{inspection} to Inspection{rental},
    RouteFromTo{routeStop} to RouteStop{routeFromTo},
    Inspection{photo} to InspectionPhoto{inspection},
    Location{routeStop} to RouteStop{location},
    Inspection{repair} to Repair{inspection},
    Car{rental} to Rental{car(licensePlate)}
}

relationship OneToOne {
    Customer{systemUser(login)} to User with builtInEntity
}

filter Rental, Inspection
