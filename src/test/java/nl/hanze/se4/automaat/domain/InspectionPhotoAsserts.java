package nl.hanze.se4.automaat.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InspectionPhotoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInspectionPhotoAllPropertiesEquals(InspectionPhoto expected, InspectionPhoto actual) {
        assertInspectionPhotoAutoGeneratedPropertiesEquals(expected, actual);
        assertInspectionPhotoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInspectionPhotoAllUpdatablePropertiesEquals(InspectionPhoto expected, InspectionPhoto actual) {
        assertInspectionPhotoUpdatableFieldsEquals(expected, actual);
        assertInspectionPhotoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInspectionPhotoAutoGeneratedPropertiesEquals(InspectionPhoto expected, InspectionPhoto actual) {
        assertThat(expected)
            .as("Verify InspectionPhoto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInspectionPhotoUpdatableFieldsEquals(InspectionPhoto expected, InspectionPhoto actual) {
        assertThat(expected)
            .as("Verify InspectionPhoto relevant properties")
            .satisfies(e -> assertThat(e.getPhoto()).as("check photo").isEqualTo(actual.getPhoto()))
            .satisfies(e -> assertThat(e.getPhotoContentType()).as("check photo contenty type").isEqualTo(actual.getPhotoContentType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInspectionPhotoUpdatableRelationshipsEquals(InspectionPhoto expected, InspectionPhoto actual) {
        assertThat(expected)
            .as("Verify InspectionPhoto relationships")
            .satisfies(e -> assertThat(e.getInspection()).as("check inspection").isEqualTo(actual.getInspection()));
    }
}
